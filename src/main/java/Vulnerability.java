import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import java.util.ArrayList;
import java.io.IOException;

public class Vulnerability {
    protected ArrayList<VulnerabilityElement> elements = null;

    public Vulnerability(String id){
        elements = new ArrayList<VulnerabilityElement>();

        try {
            Document doc = this.getVulnerabilityById(id);

            this.initElements(doc);
        } catch (IOException e) {
            System.out.println("could not load vulnerabilty details: "+e.getMessage());
        }
    }

    public Vulnerability() {
          elements = new ArrayList<VulnerabilityElement>();
    }

    public void addElements(String id, String title, String date, String link) {
          this.elements.add(new VulnerabilityElement("id",id));
          this.elements.add(new VulnerabilityElement("title",title));
          this.elements.add(new VulnerabilityElement("date",date));
          this.elements.add(new VulnerabilityElement("link",link));
    }

    protected Document getVulnerabilityById(String id) throws IOException {
        Document doc = Jsoup.connect(
            "http://www.osvdb.org/show/osvdb/93876" //+id
        ).userAgent("Mozilla").timeout(3000).get();

        return doc;
    }

    protected void initElements(Document doc) {
        VulnerabilityElement vId = new VulnerabilityElement(doc, "id","p.sectionheader");
        this.elements.add(vId.split(":",0));
        this.elements.add(new VulnerabilityElement(doc, "title","title"));
        this.elements.add(new VulnerabilityElement(doc, "vendor","table.product_tbl tr td:eq(0) a"));
        this.elements.add(new VulnerabilityElement(doc, "product","table.product_tbl tr td:eq(1)"));
        this.elements.add(new VulnerabilityElement(doc, "version","table.product_tbl tr td:eq(2)"));
        this.elements.add(new VulnerabilityElement(doc, "link","p.sectionheader span a:eq(2)"));
    }

    public ArrayList<VulnerabilityElement> getElements() {
        return this.elements;
    }
}
